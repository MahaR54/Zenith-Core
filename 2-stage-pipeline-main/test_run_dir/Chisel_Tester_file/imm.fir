;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit imm : 
  module imm : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip ins : UInt<32>, flip pc_out : UInt<32>, out : SInt<32>}
    
    io.out <= asSInt(UInt<1>("h00")) @[imm.scala 11:10]
    node _T = bits(io.ins, 6, 0) @[imm.scala 12:16]
    node _T_1 = eq(UInt<5>("h013"), _T) @[Conditional.scala 37:30]
    when _T_1 : @[Conditional.scala 40:58]
      node _io_out_T = bits(io.ins, 31, 20) @[imm.scala 14:25]
      node _io_out_T_1 = asSInt(_io_out_T) @[imm.scala 14:35]
      io.out <= _io_out_T_1 @[imm.scala 14:14]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_2 = eq(UInt<7>("h067"), _T) @[Conditional.scala 37:30]
      when _T_2 : @[Conditional.scala 39:67]
        node _io_out_T_2 = bits(io.ins, 31, 31) @[imm.scala 17:36]
        node _io_out_T_3 = bits(_io_out_T_2, 0, 0) @[Bitwise.scala 72:15]
        node _io_out_T_4 = mux(_io_out_T_3, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
        node _io_out_T_5 = bits(io.ins, 31, 20) @[imm.scala 17:48]
        node _io_out_T_6 = dshr(_io_out_T_4, _io_out_T_5) @[imm.scala 17:41]
        node _io_out_T_7 = bits(_io_out_T_6, 0, 0) @[imm.scala 17:41]
        node _io_out_T_8 = asSInt(_io_out_T_7) @[imm.scala 17:59]
        io.out <= _io_out_T_8 @[imm.scala 17:14]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_3 = eq(UInt<6>("h023"), _T) @[Conditional.scala 37:30]
        when _T_3 : @[Conditional.scala 39:67]
          node io_out_hi = mux(UInt<1>("h00"), UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
          node io_out_hi_1 = bits(io.ins, 31, 24) @[imm.scala 20:47]
          node io_out_lo = bits(io.ins, 12, 7) @[imm.scala 20:63]
          node io_out_lo_1 = cat(io_out_hi_1, io_out_lo) @[Cat.scala 30:58]
          node _io_out_T_9 = cat(io_out_hi, io_out_lo_1) @[Cat.scala 30:58]
          node _io_out_T_10 = asSInt(_io_out_T_9) @[imm.scala 20:74]
          io.out <= _io_out_T_10 @[imm.scala 20:14]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_4 = eq(UInt<7>("h063"), _T) @[Conditional.scala 37:30]
          when _T_4 : @[Conditional.scala 39:67]
            node io_out_hi_2 = bits(io.ins, 31, 31) @[imm.scala 23:32]
            node io_out_lo_2 = bits(io.ins, 7, 7) @[imm.scala 23:44]
            node io_out_hi_3 = cat(io_out_hi_2, io_out_lo_2) @[Cat.scala 30:58]
            node io_out_hi_4 = bits(io.ins, 30, 25) @[imm.scala 23:60]
            node io_out_lo_3 = bits(io.ins, 11, 8) @[imm.scala 23:76]
            node io_out_lo_4 = cat(io_out_hi_4, io_out_lo_3) @[Cat.scala 30:58]
            node _io_out_T_11 = cat(io_out_hi_3, io_out_lo_4) @[Cat.scala 30:58]
            node _io_out_T_12 = asSInt(_io_out_T_11) @[imm.scala 23:87]
            io.out <= _io_out_T_12 @[imm.scala 23:14]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_5 = eq(UInt<6>("h037"), _T) @[Conditional.scala 37:30]
            when _T_5 : @[Conditional.scala 39:67]
              node _io_out_T_13 = bits(io.ins, 31, 12) @[imm.scala 27:24]
              node _io_out_T_14 = asSInt(_io_out_T_13) @[imm.scala 27:34]
              io.out <= _io_out_T_14 @[imm.scala 27:14]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_6 = eq(UInt<2>("h03"), _T) @[Conditional.scala 37:30]
              when _T_6 : @[Conditional.scala 39:67]
                node io_out_hi_5 = mux(UInt<1>("h00"), UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
                node io_out_lo_5 = bits(io.ins, 31, 20) @[imm.scala 31:43]
                node _io_out_T_15 = cat(io_out_hi_5, io_out_lo_5) @[Cat.scala 30:58]
                node _io_out_T_16 = asSInt(_io_out_T_15) @[imm.scala 31:54]
                io.out <= _io_out_T_16 @[imm.scala 31:14]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_7 = eq(UInt<7>("h06f"), _T) @[Conditional.scala 37:30]
                when _T_7 : @[Conditional.scala 39:67]
                  node _io_out_T_17 = bits(io.ins, 31, 31) @[imm.scala 34:36]
                  node _io_out_T_18 = bits(_io_out_T_17, 0, 0) @[Bitwise.scala 72:15]
                  node io_out_hi_hi_hi = mux(_io_out_T_18, UInt<11>("h07ff"), UInt<11>("h00")) @[Bitwise.scala 72:12]
                  node io_out_hi_hi_lo = bits(io.ins, 31, 31) @[imm.scala 34:49]
                  node io_out_hi_lo = bits(io.ins, 19, 12) @[imm.scala 34:61]
                  node io_out_lo_hi_hi = bits(io.ins, 20, 20) @[imm.scala 34:76]
                  node io_out_lo_hi_lo = bits(io.ins, 30, 21) @[imm.scala 34:87]
                  node io_out_lo_hi = cat(io_out_lo_hi_hi, io_out_lo_hi_lo) @[Cat.scala 30:58]
                  node io_out_lo_6 = cat(io_out_lo_hi, UInt<1>("h00")) @[Cat.scala 30:58]
                  node io_out_hi_hi = cat(io_out_hi_hi_hi, io_out_hi_hi_lo) @[Cat.scala 30:58]
                  node io_out_hi_6 = cat(io_out_hi_hi, io_out_hi_lo) @[Cat.scala 30:58]
                  node _io_out_T_19 = cat(io_out_hi_6, io_out_lo_6) @[Cat.scala 30:58]
                  node _io_out_T_20 = asSInt(_io_out_T_19) @[imm.scala 34:101]
                  io.out <= _io_out_T_20 @[imm.scala 34:14]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_8 = eq(UInt<5>("h017"), _T) @[Conditional.scala 37:30]
                  when _T_8 : @[Conditional.scala 39:67]
                    node io_out_hi_7 = mux(UInt<1>("h00"), UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
                    node io_out_lo_7 = bits(io.ins, 31, 12) @[imm.scala 37:42]
                    node _io_out_T_21 = cat(io_out_hi_7, io_out_lo_7) @[Cat.scala 30:58]
                    node _io_out_T_22 = add(_io_out_T_21, io.pc_out) @[imm.scala 37:51]
                    node _io_out_T_23 = tail(_io_out_T_22, 1) @[imm.scala 37:51]
                    node _io_out_T_24 = asSInt(_io_out_T_23) @[imm.scala 37:63]
                    io.out <= _io_out_T_24 @[imm.scala 37:14]
                    skip @[Conditional.scala 39:67]
    
