$date
2024-01-05T12:21+0000
$end
$version
0.2
$end
$comment

$end
$timescale 1ns  $end
$scope module imm $end
 $var wire 12 ! _io_out_T_12 $end
 $var wire 6 " io_out_lo $end
 $var wire 10 # io_out_lo_hi_lo $end
 $var wire 32 $ io_ins $end
 $var wire 32 % io_out $end
 $var wire 40 & _GEN_2 $end
 $var wire 8 ' io_out_hi_1 $end
 $var wire 1 ( _io_out_T_8 $end
 $var wire 7 ) _T $end
 $var wire 40 * _GEN_5 $end
 $var wire 6 + io_out_hi_4 $end
 $var wire 1 , _io_out_T_2 $end
 $var wire 12 - _io_out_T_11 $end
 $var wire 32 . _GEN_8 $end
 $var wire 20 / _io_out_T_14 $end
 $var wire 32 0 _io_out_T_20 $end
 $var wire 11 1 io_out_hi_hi_hi $end
 $var wire 40 2 _io_out_T_23 $end
 $var wire 40 3 _GEN_7 $end
 $var wire 20 4 _io_out_T_4 $end
 $var wire 4 5 io_out_lo_3 $end
 $var wire 1 6 _io_out_T_7 $end
 $var wire 40 7 _GEN_1 $end
 $var wire 32 8 _io_out_T_16 $end
 $var wire 41 9 _io_out_T_22 $end
 $var wire 12 : _io_out_T_1 $end
 $var wire 1 ; io_out_lo_hi_hi $end
 $var wire 40 < _GEN_4 $end
 $var wire 1 = clock $end
 $var wire 32 > _io_out_T_19 $end
 $var wire 34 ? _io_out_T_10 $end
 $var wire 8 @ io_out_hi_lo $end
 $var wire 1 A io_out_lo_2 $end
 $var wire 20 B _io_out_T_13 $end
 $var wire 34 C _io_out_T_9 $end
 $var wire 32 D io_pc_out $end
 $var wire 40 E _GEN_6 $end
 $var wire 40 F _GEN_0 $end
 $var wire 20 G _io_out_T_6 $end
 $var wire 12 H _io_out_T $end
 $var wire 32 I _io_out_T_15 $end
 $var wire 1 J reset $end
 $var wire 40 K _io_out_T_21 $end
 $var wire 40 L _GEN_3 $end
 $var wire 40 M _io_out_T_24 $end
$upscope $end
$enddefinitions $end
$dumpvars
b0000000000000000000000000000000000 C
b00000000000000000000000000000000 D
b000000000000 -
0;
b0000000000000000000000000000000000000000 &
0=
b0000000000000000000000000000000000000000 <
b00000000000000000000000000000000 >
b000000 "
06
b0000000000000000000000000000000000 ?
b0000000 )
b00000000000000000000000000000000 8
b0000000000000000000000000000000000000000 L
b0000000000000000000000000000000000000000 7
b0000000000000000000000000000000000000000 M
b00000000000000000000 4
b00000000000 1
b0000000000 #
b00000000000000000000000000000000 I
b00000000 '
b0000000000000000000000000000000000000000 2
b00000000000000000000000000000000000000000 9
b0000 5
b000000000000 :
b0000000000000000000000000000000000000000 3
b00000000000000000000 /
0J
b00000000000000000000000000000000 .
b00000000 @
b0000000000000000000000000000000000000000 K
b00000000000000000000 G
b00000000000000000000000000000000 0
b000000000000 !
0(
b0000000000000000000000000000000000000000 E
b000000 +
b0000000000000000000000000000000000000000 F
b00000000000000000000 B
b0000000000000000000000000000000000000000 *
b00000000000000000000000000000000 $
b000000000000 H
0A
0,
b00000000000000000000000000000000 %
$end
#0
1J
#1
1=
#6
b1111111111111111111111111111111111111110 3
b1111111111111111111111111111111111111110 <
b11111111111111111111 4
0J
b1110 5
b0000000000000000000011111110001100010001 K
16
b11111110001100010001 /
b0000000000000000000011111110001100010010 M
b11111111111100010001111111100010 0
b11111111111 1
b00011111111111111111 G
b0000000000000000000011111110001100010010 2
b1111111111111111111111111111111111111110 *
b111111100011 H
b111111 +
b00000000000000000000111111100011 I
1A
1,
b11111110001100010001 B
b111111111110 -
b11111111111111111111111111111110 %
b0000000000000000000011111110111101 C
b11111111111111111111111111111110 .
b00000000000000000000000000000001 D
b11111110 '
b1111111111111111111111111111111111111110 E
0=
1(
b11111111111100010001111111100010 >
b1100011 )
b111111111110 !
b0000000000000000000011111110111101 ?
b111101 "
b00010001 @
b00000000000000000000111111100011 8
b1111110001 #
b00000000000000000000011111110001100010010 9
b11111110001100010001111011100011 $
b111111100011 :
1;
